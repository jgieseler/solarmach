# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: pytest

on:
  push:
    # branches: [ "main" ]
  pull_request:
    # branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-doctestplus pytest-cov pytest-mpl
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest -rP --mpl --mpl-baseline-path=baseline --mpl-baseline-relative --mpl-generate-summary=html --mpl-results-path='/home/runner/work/solarmach/solarmach/report/' --cov .
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    - name: Save PFSS plot as artifcat
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.python-version }}-pfss-plot-artifact
        path: "/home/runner/work/solarmach/solarmach/solarmach_pfss.png"
    - name: Save standard plot as artifcat
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.python-version }}-standard-plot-artifact
        path: "/home/runner/work/solarmach/solarmach/solarmach.png"
    - name: Save pytest-mpl report as artifcat
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.python-version }}-pytest-mpl-report-artifact
        path: "/home/runner/work/solarmach/solarmach/report/"